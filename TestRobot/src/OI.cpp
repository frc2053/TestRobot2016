// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveCommand.h"
#include "Commands/ShootForward.h"
#include "Commands/ShootBackwards.h"
#include "Commands/ExtendIntake.h"
#include "Commands/RetractIntake.h"
#include "Commands/RollerForward.h"
#include "Commands/RollerBackwards.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    gunnerJoystick.reset(new Joystick(1));
    
    driverJoystick.reset(new Joystick(0));
    

    // SmartDashboard Buttons
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    buttonA.reset(new JoystickButton(gunnerJoystick.get(), 0));
    buttonB.reset(new JoystickButton(gunnerJoystick.get(), 1));
    buttonX.reset(new JoystickButton(gunnerJoystick.get(), 2));
    buttonY.reset(new JoystickButton(gunnerJoystick.get(), 3));
    buttonBack.reset(new JoystickButton(gunnerJoystick.get(), 6));
    buttonStart.reset(new JoystickButton(gunnerJoystick.get(), 7));

    buttonA->WhileHeld(new ShootForward());
    buttonB->WhileHeld(new ShootBackwards());
    buttonX->WhenPressed(new ExtendIntake());
    buttonY->WhenPressed(new RetractIntake());
    buttonStart->WhileHeld(new RollerForward());
    buttonBack->WhileHeld(new RollerBackwards());
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getdriverJoystick() {
   return driverJoystick;
}

std::shared_ptr<Joystick> OI::getgunnerJoystick() {
   return gunnerJoystick;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
